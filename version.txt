### V1.2.1
+ Improved ZKB duplicated kills detection
+ Improved kill logging

### V1.2.0
+ Improved ZKB support
+ Fixed auth report message channel selection

### V1.1.9
+ Updated ZKB handling with the recent API changes (Oct 2, 2018)
+ Added 'd' param parse for !stats command for current day
+ Refined !char and !corp command to query less data due to excessive ESI load
+ Fixed radius killmail central system name
+ Fixed missing parts in default config file

### V1.1.8
+ Improved web auth module to process authentication for groups with special ESI permission list 
+ Added new HRM module - human resource management with JackKnife feats, able to display complete data for members authed with special permissions
+ Added startup check if settings.json file is present
+ Do not generate buttons on the main web page if corresponding module is disabled
+ Added optional params to webAuthModule settings group: UseCustomAuthRoles and ESICustomAuthRoles
+ Added optional DefaultAuthGroup param to webAuthModule
+ Added optional ShowGroupName param to liveKillFeedModule and radiusKillFeedModule
+ Added new !authurl command which will return default web auth url based on DefaultAuthGroup param or first auth group found. *!authurl groupName* will return auth url for specified group name (by default known to admin only).
+ Added new KM template param {NewLine} - inserts line break
+ Added message filtering to TED_ChatRelay app
+ Improved denied access handling for web modules
+ Improved ZKill feeder to don't feed kills if none of the other modules demands them
+ Improved logging
+ Fixed discord user names in TelegramRelay module

### Highlights - Advanced Web Auth
Improved web authentication module now supports 3 different modes:
1. General auth with no special permissions (as before)
2. General auth with special ESI permissions requested from group applicant. Creates separate auth button on web server.
3. Preliminary auth with special ESI permissions requested from group applicant. Creates separate auth button on web server.

Renewed auth logic now allows you to control which permissions to request from which auth groups, i.e. which data EVE Online characters will share with you upon authentication.
By default this feature is disabled and new users will only pass basic auth as before. But if you fill *ESICustomAuthRoles* param (mode 2) then bot will get a refresh token from character during auth process.
This refresh token will be stored in a database and will be used to fetch all required data about registered characters. You can also set *PreliminaryAuthMode* (mode 3) to force applicants to wait for an approval 
making it possible to inspect them using "JackKnife" utility named **HRM** before they're allowed into your corporation or alliance.

NOTE: Refresh token can be invalidated by user at any time in their EVE Online account settings
NOTE: You have to add all required ESI permissions to your CCP app before you can use them in auth process

Considering the above you can build your own "JackKnife" recruitment process for selected group as following:
1. Create auth group with *PreliminaryAuthMode* set to true. This will force group to accept all auth requests and enable refresh token extraction. All appllicants will be put on hold for consequent actions.
2. An applicant should confirm his registration in Discord using *!auth confirm CODE* command displayed during their auth process. This is needed to bind their registration to Discord account.
3. Now the data from the applicants will be available for review in the HRM Module web page.
4. Decision:
  - If you decide to accept member then just invite him to your corporation and the bot will automatically auth applicant in Discord based on *CorpIDList* and *AllianceIDList* params. Make sure to set correct *MemberRoles* param to apply Discord roles upon successful registration.
  - If you decide to decline application you can set *AppInvalidationInHours* param which will delete applications when specified amount of hours has passed, decline them manually in HRM module or by using *!auth decline CODE/ID* command.

### Breaking changes
+ Templates/main.html template file changed
+ Templates/auth2.html template file changed
+ Templates/accessDenied.html template file added
+ Auth group CorpID property renamed to CorpIDList and is now an array of integer values
+ Auth group AllianceID property renamed to AllianceIDList and is now an array of integer values

### Notes
+ Web templates for HRM are not optimal yet. They use Bootstrap4 + JQuery so any help tuning them to look nice will be highly appreciated.

### v1.1.7
+ Added missing discord roles notification for console and file logs in Auth module
+ Added Discord guild ID validity check
+ Added new module: moduleFWStats - access to !fwstats command
+ Added new command *!turl* - displays timers auth page url
+ Added new command *!timers* - displays upcoming timers list
+ Added connection status check to avoid excessive requests and logging while EVE is offline or network connection is not available
+ Added core ContinousCheckModule for misc reporting and processing logic. Now featuring auto-post when TQ goes Online / Offline into selected channels.
+ Improved checks performance
+ Upgraded to .NET Core 2.1 platform
+ Updated config editor to support static modules like Resources and ContinousCheckModule
+ Optimized star system data queries to use static data when possible
+ Fixed nullsec campaign excessive spam

### Notes
* 4 new Resources section entries in the settings file - ImgFaction
* New properties in the Config section of the settings file: moduleFWStats, moduleLPStock
* New config file section - *ContinousCheckModule*
* New *TinyUrl* param in Timers section - manually generated tinu url to display for !turl command

### Breaking changes
+ Platform has been updated to .NET Core 2.1 which might require an SDK update on the server
+ StatsModule config section has been merged into new ContinousCheckModule section with the new property names

v1.1.6
+ Added new defaultMention parameter for notifications filter
+ Added new fetchLastNotifDays parameter for notification group
+ Added new NullsecCampaign module
+ Added bot config tool for Windows
+ Added isCorporation property to timer module filters to make corporation ID input more convinient
+ Added static EVE systems data into the database
+ Improved bad config error messages
+ Improved TED Chat Relay error report
+ Fixed live kill feed exception
+ Fixed inability to add new timers after delete operation
+ Fixed mail module refresh logic

Breaking changes
+ TED_ChatRelay app: Renamed settings.json to relaysettings.json
+ TED_ChatRelay and ThunderED will now be supplied within single package as they share 99% of release libraries anyway.

v1.1.5
+ Added new incursions notification module
+ Added new Discord command !tq
+ Added new notifications: CorpAppNewMsg and CharAppWithdrawMsg (thanks to lunedis)
+ Added new config property **databaseFile** to be able to specify database location
+ Updated all settings to use unified names and fetch procedures
+ Removed WebAuthModule dependency from NotificationFeedModule
+ Updated Docker script (thanks to lunedis)
+ Updated code to work with Abyss innovations

Breaking changes
- Reliable kill feed module is unavailable at the moment. Disabled due to ZKill API issues. Use liveKillFeedModule.
- **auth** config section renamed to **WebAuthModule**
- **WebAuthModule.authCheckIntervalMinutes** is now a numeric value
- **discordUrl, ccpAppClientId, ccpAppSecret** properties moved from **WebAuthModule** to **webServerModule**
- **jabber** module parameter **defchan** and filters are now numeric values
- **liveKillFeed** module renamed to **liveKillFeedModule**
- **fleetup** module renamed to **fleetupModule**
- **jabber** module renamed to **jabberModule**
- Removed global **losses** param from **liveKillFeedModule**. Set high **minimumLossValue** value for the same effect.
- Removed not used **config.DiscordGeneralChannel** param
- Removed not used **config.comRestrictToValidChannels** param
- Added new resource param **imgIncursion**

v1.1.4
+ Added new notifications: StructureDestroyed and OrbitalAttacked
+ Added ZKB links to some of the notification messages
+ Added timestamp settings for EVE Chat Relay module
+ Added unified version file
+ Added Back buttons to all web pages
+ Reworked authenticationto check for multiple discord roles per group
+ Reworked notifications module to allow better control over notification filters
+ Fixed auto-timers notification exception with empty notes

Breaking changes
+ Settings **auth -> authGroups -> group1 -> memberRole** renamed to **memberRoles** and now is a list of strings
+ **notifications** section replaced by **notificationFeedModule** section with updated settings

v1.1.3
+ Fixed fleetup notification issues
+ Fixed notifications time issue
+ Fixed SQLite query issues

v1.1.2
+ Added new module for IRC connection. Now you can have two-way Discord message relay with IRC.
+ Added new module for Telegram connection. Now you can have two-way Discord message relay with Telegram.
+ Added new module and app - EVE chat relay. One way EVE ingame chat relay into Discord channels.
+ Added regions and constellations cache
+ Fixed welcome message translation
+ Fixed double bigkill messages in reliable kill feed
+ Fixed default database file missing some required fields

v1.1.1
+ Added includePrivateMail property to mail groups
+ Added Docker support
+ Added additional messages when bot don't have access rights in Discord channel
+ Added missing AppKey parameter to fleetup default config
+ Improved overall bot performance
+ Improved fleetUp module error handling
+ Fixed critical error in WebAuth for pending users
+ Fixed radius kill handling with 2 or more groups
+ Fixed possible radius processing fail
+ Some localization fixes
+ Unified date format handling

v1.1.0
+ Added sender options to mailModule to filter mail by sender IDs
+ Fixed timers handling
+ Fixed 0 big kill channel errors in feeds
+ Refactored SQL methods
+ Updated logging

v1.0.9 BETA
+ Added first version of Mail module
+ Fixed missing main web page title translation
+ Improved crossplatform compatibility

v1.0.8 BETA
+ Fixed Discor auth failing in some cases
+ Merged auth section group settings into one - memberRole

v1.0.7 BETA
+ Added TimersModule
+ Improved web queries reliability and performance. Added retries and gzip support.
+ Moved web-server to the core modules, all others can use it on demand
+ Moved IP address and port settings to webServerModule section
+ Fixed aggressor query in wardec notifications due to weird Core bug
+ Updated notification feed access rights to include citadels info and chat chanels

v1.0.6 BETA
+ Added ability to run free-for-all auth server with no corp or alliance restrictions
+ Fixed logging files for FleetUp
+ Fixed initial setup SQL upgrade issues

v1.0.5 BETA
+ Added !web and !authnotify commands
+ Added main web-server page to display all available activities
+ Added direct system, constellation and region radius KM feeds
+ Added caching option for live feed modules
+ Added beta FleetUp integration
+ Fixed admin command privilegies
+ Updated test module routine
+ Small fixes to HTML templates
- Removed name param from feeds. Use group name directly instead.

v1.0.4 BETA
- Initial public release